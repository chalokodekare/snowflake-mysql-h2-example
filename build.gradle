plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'groovy'
    id 'jacoco'
    id 'com.github.hierynomus.license' version '0.16.1'
    id 'application'
}

group 'com.chalocodekare.snowflake-example'
version "${version}"
depVersion = "${depVersion}"

sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    def spockVersion = '2.2-M1-groovy-4.0'
    def excludeGroovyAll = {
        exclude group: 'org.codehaus.groovy'
    }

    implementation 'org.springframework.data:spring-data-commons'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'org.spockframework', name: 'spock-core', version: spockVersion, excludeGroovyAll
    testImplementation group: 'org.spockframework', name: 'spock-spring', version: spockVersion, excludeGroovyAll

    testRuntimeOnly group: 'org.spockframework', name: 'spock-core', version: spockVersion, excludeGroovyAll

    //for datasource setup
    def hikariCPVersion = '5.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: hikariCPVersion

    //for snowflake
    implementation 'net.snowflake:snowflake-jdbc:3.12.16'

    //for mysql
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.32'

    //for h2
    testImplementation group: 'com.h2database', name: 'h2', version: '2.1.214'

}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

//To exclude classes from jacoco report.
def jacocoExcludeFromReport = ['**/com/chalocodekare/snowflake/Application*',
                               '**/com/chalocodekare/snowflake/constants/**']


jacocoTestReport {
    dependsOn test

    group = "Reporting"
    reports {
        xml.required = true
        html.required = true
        csv.required = false
        html.outputLocation = file("${buildDir}/reports/coverage")
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExcludeFromReport)
        }))
    }
}

//To exclude classes from jacoco coverage check.
jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = ['com.chalocodekare.snowflake.*']
            excludes = ['com.chalocodekare.snowflake.Application',
                        'com.chalocodekare.snowflake.constants.*',
                        'com.chalocodekare.snowflake.entity.*',
                        'com.chalocodekare.snowflake.repository.*',
                        'com.chalocodekare.snowflake.service.*',
                        'com.chalocodekare.snowflake.controller.HealthCheckController',
                        'com.chalocodekare.snowflake.controller.EmployeeNameJpaController']
            limit {
                counter = 'LINE'
                minimum = 0.9
            }
        }
    }
}

test {
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}


//By default start bootrun on development profile
bootRun {
    systemProperties = System.properties
    systemProperty 'spring.profiles.active', 'development'
}


//To let you override the logical main-class called loader.main
bootJar {
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
    }
}

jar.enabled = true

//To update license header in all java & groovy classes.
license {
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    includes(["**/*.java", "**/*.groovy"])
}
classes.dependsOn(licenseFormat)

//This is to fix snowflake compatibility issue with java 17.
applicationDefaultJvmArgs = ["--add-opens", "java.base/java.nio=ALL-UNNAMED"]
